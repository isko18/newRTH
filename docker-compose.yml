version: '3.7'

services:
    db:
      image: postgres:12.0-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      networks:
        - my-network
      env_file:
        - ./.env

    backend:
      restart: unless-stopped
      build:
        context: .
        dockerfile: ./docker/backend/Dockerfile
      volumes:
          - static_volume:/app/static
          - media_volume:/app/media
      entrypoint: /app/docker/backend/wsgi-entrypoint.sh
      networks:
        - my-network
      depends_on:
        - db
      env_file:
        - ./.env

    nginx:
      restart: unless-stopped
      build:
        context: .
        dockerfile: ./docker/nginx/Dockerfile
      ports:
        - 80:80
        - 443:443
      volumes:
        - ./docker/nginx/prod:/etc/nginx/conf.d
        - static_volume:/app/static
        - media_volume:/app/media
        - ./docker/nginx/certbot/conf:/etc/letsencrypt
        - ./docker/nginx/certbot/www:/var/www/certbot
      networks:
        - my-network
      depends_on:
        - db
        - backend

    certbot:
      image: certbot/certbot
      restart: unless-stopped
      volumes:
        - ./docker/nginx/certbot/conf:/etc/letsencrypt
        - ./docker/nginx/certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_volume:
  postgres_data:
  media_volume:

networks:
  my-network:
